{"version":3,"sources":["Draggable/index.jsx","Droppable/index.jsx","DragDropContext/index.jsx","Modal/index.jsx","App.jsx","index.js"],"names":["DraggableComponent","props","key","item","id","className","draggableId","index","taskProps","ref","innerRef","draggableProps","dragHandleProps","title","column","name","src","alt","height","width","style","cursor","onClick","taskName","columnData","JSON","parse","localStorage","getItem","Object","keys","filteredArr","tasks","filter","arrayItem","clear","setItem","stringify","window","location","reload","removeTask","DroppableComponent","droppableId","columnId","provided","droppableProps","map","placeholder","DragDrop","data","uuidv4","useState","columns","setColumns","useEffect","onDragEnd","result","destination","source","sourceColumn","destColumn","sourceItems","destItems","splice","removed","copiedItems","entries","customStyles","content","top","left","right","bottom","marginRight","transform","ModalFn","React","modalIsOpen","setIsOpen","closeModal","isOpen","onRequestClose","contentLabel","onSubmit","event","preventDefault","target","task","value","newTask","push","htmlFor","required","type","Modal","setAppElement","document","getElementById","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5f769f63.chunk.js","sourcesContent":["import React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport PropTypes from 'prop-types';\n\nconst removeTask = (taskName) => {\n  const columnData = JSON.parse(localStorage.getItem('columns'));\n  const column = Object.keys(columnData)[0];\n  const filteredArr = columnData[column].tasks.filter((arrayItem) => arrayItem.title !== taskName);\n  columnData[column].tasks = filteredArr;\n\n  localStorage.clear();\n  localStorage.setItem('columns', JSON.stringify(columnData));\n\n  window.location.reload();\n};\n\nexport default function DraggableComponent(props) {\n  return (\n    <div key={props.item.id} className=\"task-wrapper\">\n      <Draggable\n        draggableId={props.item.id}\n        index={props.index}\n      >\n      {(taskProps) => <div\n        ref={taskProps.innerRef}\n        {...taskProps.draggableProps}\n        {...taskProps.dragHandleProps}\n        className=\"task\"\n      >\n        {props.item.title}\n      </div>}\n      </Draggable>\n\n      {props.column.name === 'INBOX'\n        ? <img src=\"https://image.flaticon.com/icons/svg/1214/1214428.svg\"\n          alt=\"delete\"\n          height=\"15\"\n          width=\"15\"\n          style={{ cursor: 'pointer' }}\n          onClick={() => removeTask(props.item.title)}\n        />\n        : null}\n  </div>\n  );\n}\n\nDraggableComponent.propTypes = {\n  item: PropTypes.object,\n  column: PropTypes.object,\n  index: PropTypes.number,\n};\n","import React from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport PropTypes from 'prop-types';\nimport DraggableComponent from '../Draggable/index.jsx';\n\nexport default function DroppableComponent(props) {\n  return (\n    <Droppable\n        droppableId={props.columnId} key={props.columnId} >\n        {(provided) => <div\n          {...provided.droppableProps}\n          ref={provided.innerRef}\n          className=\"columns\"\n          key={props.columnId}\n        >\n          <h2>\n            <u>\n              {props.column.name}\n            </u>\n          </h2>\n          <div>\n            {props.column.tasks.map((item, key) => <DraggableComponent\n            item={item}\n            key={key}\n            index={key}\n            column={props.column}/>)}\n          </div>\n          {provided.placeholder}\n        </div>\n        }\n      </Droppable>\n  );\n}\n\nDroppableComponent.propTypes = {\n  column: PropTypes.object,\n  columnId: PropTypes.string,\n};\n","import React, { useEffect, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport DroppableComponent from '../Droppable/index.jsx';\n\nconst onDragEnd = (result, columns, setColumns) => {\n  if (!result.destination) return;\n  const { source, destination } = result;\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.tasks];\n    const destItems = [...destColumn.tasks];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...sourceColumn,\n        tasks: sourceItems,\n      },\n      [destination.droppableId]: {\n        ...destColumn,\n        tasks: destItems,\n      },\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.tasks];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...column,\n        tasks: copiedItems,\n      },\n    });\n  }\n};\n\n\nexport default function DragDrop() {\n  const data = {\n    [uuidv4()]: {\n      name: 'INBOX',\n      tasks: [],\n    },\n    [uuidv4()]: {\n      name: 'DOING',\n      tasks: [],\n    },\n    [uuidv4()]: {\n      name: 'DONE',\n      tasks: [],\n    },\n    [uuidv4()]: {\n      name: 'REJECTED',\n      tasks: [],\n    },\n  };\n\n  const [columns, setColumns] = useState({});\n  useEffect(() => {\n    const columnData = JSON.parse(localStorage.getItem('columns'));\n    if (columnData) {\n      setColumns(columnData);\n    } else {\n      setColumns(data);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('columns', JSON.stringify(columns));\n  }, [columns]);\n\n  return (\n    <DragDropContext onDragEnd={(result) => onDragEnd(result, columns, setColumns)}>\n      { Object.entries(columns).map(([columnId, column]) => <DroppableComponent\n        columnId={columnId}\n        key={columnId}\n        column={column}\n      />)}\n    </DragDropContext>\n  );\n}\n","import React from 'react';\nimport Modal from 'react-modal';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    height: '150px',\n    width: '300px',\n  },\n};\n\nModal.setAppElement(document.getElementById('root'));\n\nexport default function ModalFn() {\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  function getTaskName(event) {\n    event.preventDefault();\n\n    const taskName = event.target.task.value;\n    const newTask = { id: uuidv4(), title: taskName };\n\n    const columnData = JSON.parse(localStorage.getItem('columns'));\n    const column = Object.keys(columnData)[0];\n    columnData[column].tasks.push(newTask);\n\n    localStorage.clear();\n    localStorage.setItem('columns', JSON.stringify(columnData));\n\n    closeModal();\n    window.location.reload();\n  }\n\n  return (\n    <div>\n      <button onClick={openModal} className=\"modal-display-text\">Create a Task</button>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Modal\"\n      >\n        <div className=\"modal-header\">\n          <h3>Create a task</h3>\n          <div onClick={closeModal}>close</div>\n        </div>\n\n        <form onSubmit={getTaskName}>\n          <label htmlFor=\"task\"> Name </label>\n          <input name=\"task\" required/> <br />\n          <button className=\"modal-submit-btn\" type=\"submit\"> Submit</button>\n        </form>\n\n      </Modal>\n    </div>\n  );\n}\n","import React from 'react';\nimport DragDropContext from './DragDropContext/index.jsx';\nimport ModalFn from './Modal/index.jsx';\nimport './main.css';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"column-wrapper\">\n        <DragDropContext/>\n      </div>\n      <ModalFn />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}